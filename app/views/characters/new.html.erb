<!-- app/views/characters/new.html.erb -->

<div class="container mx-auto p-8 bg-white custom-bg-opacity rounded shadow-lg mt-10 relative z-10">
  <h1 class="text-3xl font-bold text-center mb-6">Character Creation</h1>
  
  <% if @character.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@character.errors.count, "error") %> prohibited this character from being saved:</h2>
      <ul>
      <% @character.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <!-- Character Creation Form -->
  <form id="characterForm" action="<%= characters_path %>" method="post" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <!-- Character Name -->
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="characterName" class="font-bold">Name:</label>
      <input type="text" id="characterName" name="character[name]" class="block w-full p-2 bg-white border border-gray-300 rounded-md">
    </div>
    
    <!-- Character Race -->
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="characterRace" class="font-bold">Race:</label>
      <select id="characterRace" name="character[race]" class="block w-full p-2 bg-white border border-gray-300 rounded-md">
        <option value="">Select a Race</option>
        <% if @races.is_a?(Hash) && @races.key?('results') %>
          <% @races['results'].each do |race| %>
            <option value="<%= race['index'] %>"><%= race['name'] %></option>
          <% end %>
        <% elsif @races.is_a?(Array) %>
          <% @races.each do |race| %>
            <option value="<%= race['index'] %>"><%= race['name'] %></option>
          <% end %>
        <% else %>
          <option>Error loading races</option>
        <% end %>
      </select>
    </div>

    <!-- Character Class -->
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="characterClass" class="font-bold">Class:</label>
      <select id="characterClass" name="character[char_class]" class="block w-full p-2 bg-white border border-gray-300 rounded-md">
        <option value="">Select a Class</option>
        <% if @classes.is_a?(Hash) && @classes.key?('results') %>
          <% @classes['results'].each do |klass| %>
            <option value="<%= klass['index'] %>"><%= klass['name'] %></option>
          <% end %>
        <% elsif @classes.is_a?(Array) %>
          <% @classes.each do |race| %>
            <option value="<%= klass['index'] %>"><%= klass['name'] %></option>
          <% end %>
        <% else %>
          <option>Error loading class</option>
        <% end %>
      </select>
    </div>
    
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_strength" class="font-bold">Strength:</label>
      <input type="number" name="character[strength]" id="character_strength" value="15" min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_dexterity" class="font-bold">Dexterity:</label>
      <input type="number" name="character[dexterity]" id="character_dexterity" value="14"  min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_constitution" class="font-bold">Constitution:</label>
      <input type="number" name="character[constitution]" id="character_constitution" value="13"  min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_intelligence" class="font-bold">Intelligence:</label>
      <input type="number" name="character[intelligence]" id="character_intelligence" value="12"  min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_wisdom" class="font-bold">Wisdom:</label>
      <input type="number" name="character[wisdom]" id="character_wisdom" value="10"  min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <label for="character_charisma" class="font-bold">Charisma:</label>
      <input type="number" name="character[charisma]" id="character_charisma" value="8" min="0" max="20" class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
    </div>

    <!-- Submit Button -->
    <div class="col-span-full">
      <button type="submit" class="block w-full p-2 bg-blue-500 text-white font-bold rounded-md">Create Character</button>
    </div>

    <% if @character.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@character.errors.count, "error") %> prohibited this character from being saved:</h2>
        <ul>
        <% @character.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
    
    <!-- Back Button -->
    <div class="bg-white bg-opacity-75 p-4 border border-gray-200 rounded-md shadow">
      <a href="<%= url_for(:back) %>" class="block w-full p-2 bg-blue-500 text-white font-bold text-center rounded-md">Go Back</a>
    </div>

  </form>
</div>

<script>

document.addEventListener('DOMContentLoaded', function() {
  populateDropdown('classes', '/api/classes');
  populateDropdown('races', '/api/races');
});

  function populateDropdown(dropdownId, apiUrl) {
    const dropdown = document.getElementById(dropdownId);
    if (!dropdown) return;

    fetch(apiUrl)
      .then(response => response.json())
      .then(data => {
        // Clear existing options
        dropdown.innerHTML = '<option value="">Select a Class</option>';
        // Check if the data is an array or an object
        let itemsArray = data.results ? data.results : data;
        // Populate the dropdown with new options
        itemsArray.forEach(item => {
          const option = document.createElement('option');
          option.value = item.index;
          option.textContent = item.name;
          dropdown.appendChild(option);
        });
      })
      .catch(error => {
        console.error('Error fetching data: ', error);
      });
  }
</script>